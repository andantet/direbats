plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

if (System.env.CI == "true") {
    def branch
    branch = System.env.GITHUB_REF
    branch = branch.substring(branch.lastIndexOf("/") + 1)

    version = "${project.mod_version}+a${System.env.GITHUB_RUN_NUMBER}.${branch}-fabric"
} else {
    version = "${project.mod_version}+${project.minecraft_version}-fabric"
}

minecraft {}

repositories {
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.shedaniel.me" }
    maven { url = "https://maven.shadew.net" }
    maven { url = "https://maven.dblsaiko.net" }
}

dependencies {
    // DEFAULT
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // COMPATIBILITY
    // ---

    modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"

    // RUNTIME UTILS
    modRuntime ("com.github.joaoh1:OkZoomer:${project.okzoomer_version}") { exclude ( group: "me.shedaniel.cloth" ) }
    modRuntime "net.shadew:jedt:${project.jedt_version}"

    // modRuntime "com.github.jellysquid3:sodium-fabric:${project.sodium_version}"
    modRuntime "com.github.jellysquid3:lithium-fabric:${project.lithium_version}"
    modRuntime "com.github.jellysquid3:phosphor-fabric:${project.phosphor_version}"
    modRuntime "com.github.astei:lazydfu:${project.lazydfu_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    // if (JavaVersion.current().isJava9Compatible()) {
    //     it.options.release = targetVersion
    // }
}

// java {
// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this line, sources will not be generated.
// withSourcesJar()
// }

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            // artifact(sourcesJar) {
            // builtBy remapSourcesJar
            // }
        }
    }


    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/teamhollow/direbats")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
}
